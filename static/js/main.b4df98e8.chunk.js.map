{"version":3,"sources":["footer.js","Quotes.js","index.js"],"names":["Footer","props","className","href","target","rel","Quotes","state","quote","author","handleNewQuote","bind","event","name","split","colors","$","animate","opacity","this","color","Math","floor","random","length","css","backgroundColor","setTimeout","setState","listlength","quotes","randNum","generateQuote","id","icon","faQuoteLeft","style","fas","faTwitter","faTumblr","type","value","onClick","React","Component","MyApp","ReactDom","render","document","getElementById"],"mappings":"oVAkBeA,MAff,SAAgBC,GACd,OACE,yBAAKC,UAAU,UACb,uBACEC,KAAK,kCACLC,OAAO,SACPC,IAAI,uBAEJ,8BACE,iDCwHKC,E,kDAzHb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,MAAO,GACPC,OAAQ,IAEV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBANL,E,0DASLC,EAAOJ,EAAOC,GAAS,IAAD,OAC5BI,EAAOD,EAAMR,OAAOS,KAAKC,MAAM,KACjCC,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFC,IAAE,eAAeC,QAAQ,CAAEC,QAAS,GAAK,KAAK,WAC5CF,IAAEG,MAAMF,QAAQ,CAAEC,QAAS,GAAK,QAElCF,IAAE,iBAAiBC,QAAQ,CAAEC,QAAS,GAAK,KAAK,WAC9CF,IAAEG,MAAMF,QAAQ,CAAEC,QAAS,GAAK,QAElC,IAAIE,EAAQC,KAAKC,MAAMD,KAAKE,SAAWR,EAAOS,QAC9CR,IAAE,QAAQS,IACR,CACEC,gBAAiBX,EAAOK,GACxBA,MAAOL,EAAOK,IAEhB,KAEFJ,IAAE,WAAWS,IACX,CACEC,gBAAiBX,EAAOK,IAE1B,KAEFO,YAAW,WACE,KAAXlB,EACI,EAAKmB,SAAS,CACZ,CAACf,EAAK,IAAKL,EACX,CAACK,EAAK,IAAKJ,IAEb,EAAKmB,SAAS,CACZ,CAACf,EAAK,IAAKL,EACX,CAACK,EAAK,IAAK,cAEhB,O,qCAEUD,GACb,IAAMiB,EAAaC,EAAON,OACpBO,EAAUV,KAAKC,MAAMD,KAAKE,SAAWM,GAEvCrB,EAAQsB,EAAOC,GAASvB,MACxBC,EAASqB,EAAOC,GAAStB,OAC7BU,KAAKa,cAAcpB,EAAOJ,EAAOC,K,0CAGjCU,KAAKS,SAAS,CACZpB,MAAOsB,EAAO,IAAItB,MAClBC,OAAQqB,EAAO,IAAIrB,W,+BAIrB,OACE,6BACE,yBAAKwB,GAAG,aACN,yBAAKA,GAAG,cACN,kBAAC,IAAD,CAAiBC,KAAMC,IAAaC,MAAOC,MAC3C,0BAAMJ,GAAG,QAAT,IAAkBd,KAAKZ,MAAMC,MAA7B,MAEF,yBAAKyB,GAAG,gBACN,0BAAMA,GAAG,UAAT,MAAsBd,KAAKZ,MAAME,SAEnC,yBAAKP,UAAU,WACb,uBACEA,UAAU,SACVC,KAAK,2BACLC,OAAO,SACP6B,GAAG,cACH5B,IAAI,uBAEJ,kBAAC,IAAD,CAAiB4B,GAAG,eAAeC,KAAMI,OAE3C,uBACEpC,UAAU,SACVC,KAAK,qQACLC,OAAO,SACP6B,GAAG,eACH5B,IAAI,uBAEJ,kBAAC,IAAD,CAAiB4B,GAAG,cAAcC,KAAMK,OAE1C,2BACEC,KAAK,SACLtC,UAAU,SACV+B,GAAG,YACHQ,MAAM,YACN5B,KAAK,eACL6B,QAASvB,KAAKT,mBAIpB,6BACE,kBAAC,EAAD,Y,GAnHWiC,IAAMC,WCJrBC,G,wDACJ,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,GAFI,E,qDAMjB,OACE,6BACE,kBAAC,EAAD,W,GATYoC,IAAMC,YAc1BE,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,U","file":"static/js/main.b4df98e8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./footerstyle.sass\";\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <a\r\n        href=\"https://codepen.io/ANKITSINGH99\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <span>\r\n          <b>by Ankit Singh</b>\r\n        </span>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport quotes from \"./listquotes\";\r\nimport $ from \"jquery\";\r\n\r\n// import of all styles\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faTumblr } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { fas, faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Footer from \"./footer\";\r\n\r\nclass Quotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quote: \"\",\r\n      author: \"\"\r\n    };\r\n    this.handleNewQuote = this.handleNewQuote.bind(this);\r\n  }\r\n\r\n  generateQuote(event, quote, author) {\r\n    const name = event.target.name.split(\" \");\r\n    var colors = [\r\n      \"#16a085\",\r\n      \"#27ae60\",\r\n      \"#2c3e50\",\r\n      \"#f39c12\",\r\n      \"#e74c3c\",\r\n      \"#9b59b6\",\r\n      \"#FB6964\",\r\n      \"#342224\",\r\n      \"#472E32\",\r\n      \"#BDBB99\",\r\n      \"#77B1A9\",\r\n      \"#73A857\",\r\n      \"#40e0d0\"\r\n    ];\r\n\r\n    $(\"#quote-text\").animate({ opacity: 0 }, 500, function() {\r\n      $(this).animate({ opacity: 1 }, 500);\r\n    });\r\n    $(\"#quote-author\").animate({ opacity: 0 }, 500, function() {\r\n      $(this).animate({ opacity: 1 }, 500);\r\n    });\r\n    var color = Math.floor(Math.random() * colors.length);\r\n    $(\"body\").css(\r\n      {\r\n        backgroundColor: colors[color],\r\n        color: colors[color]\r\n      },\r\n      1000\r\n    );\r\n    $(\".button\").css(\r\n      {\r\n        backgroundColor: colors[color]\r\n      },\r\n      1000\r\n    );\r\n    setTimeout(() => {\r\n      author !== \"\"\r\n        ? this.setState({\r\n            [name[0]]: quote,\r\n            [name[1]]: author\r\n          })\r\n        : this.setState({\r\n            [name[0]]: quote,\r\n            [name[1]]: \"unknown\"\r\n          });\r\n    }, 500);\r\n  }\r\n  handleNewQuote(event) {\r\n    const listlength = quotes.length;\r\n    const randNum = Math.floor(Math.random() * listlength);\r\n\r\n    let quote = quotes[randNum].quote;\r\n    let author = quotes[randNum].author;\r\n    this.generateQuote(event, quote, author);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      quote: quotes[71].quote,\r\n      author: quotes[71].author\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"quote-box\">\r\n          <div id=\"quote-text\">\r\n            <FontAwesomeIcon icon={faQuoteLeft} style={fas} />\r\n            <span id=\"text\"> {this.state.quote} </span>\r\n          </div>\r\n          <div id=\"quote-author\">\r\n            <span id=\"author\"> - {this.state.author}</span>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <a\r\n              className=\"button\"\r\n              href=\"twitter.com/intent/tweet\"\r\n              target=\"_blank\"\r\n              id=\"tweet-quote\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FontAwesomeIcon id=\"twitter-icon\" icon={faTwitter} />\r\n            </a>\r\n            <a\r\n              className=\"button\"\r\n              href=\"https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption='+encodeURIComponent(currentAuthor)+'&content=' + encodeURIComponent(currentQuote)+'&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button\"\r\n              target=\"_blank\"\r\n              id=\"tumblr-quote\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FontAwesomeIcon id=\"tumblr-icon\" icon={faTumblr} />\r\n            </a>\r\n            <input\r\n              type=\"button\"\r\n              className=\"button\"\r\n              id=\"new-quote\"\r\n              value=\"New quote\"\r\n              name=\"quote author\"\r\n              onClick={this.handleNewQuote}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport Quotes from \"./Quotes\";\r\n\r\nimport \"./styles.sass\";\r\n\r\nclass MyApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Quotes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nReactDom.render(<MyApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}